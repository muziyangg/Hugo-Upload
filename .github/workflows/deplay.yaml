name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    # 增强的事件级过滤，使用正则匹配提高兼容性
    if: "!matches(github.event.head_commit.message, '^Upload\\s+file:.*$', 'i')"
  workflow_dispatch:

jobs:
  # 检查是否有正在进行的部署
  check-deployment-status:
    runs-on: ubuntu-latest
    outputs:
      can_deploy: ${{ steps.check.outputs.can_deploy }}
    steps:
      - name: Check GitHub Pages deployment status
        id: check
        run: |
          # 使用GitHub API检查当前部署状态
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pages/deployments")
          
          # 提取最近的部署状态
          LATEST_STATUS=$(echo "$RESPONSE" | jq -r '.[0].status')
          echo "最新部署状态: $LATEST_STATUS"
          
          # 如果没有正在进行的部署，允许继续
          if [[ "$LATEST_STATUS" != "in_progress" ]]; then
            echo "can_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "can_deploy=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-deployment-status
    if: needs.check-deployment-status.outputs.can_deploy == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: 打印部署信息
        run: |
          echo "事件类型: ${{ github.event_name }}"
          echo "提交信息: ${{ github.event.head_commit.message || '无（手动触发）' }}"
          echo "过滤条件结果: ${{ !matches(github.event.head_commit.message, '^Upload\\s+file:.*$', 'i') }}"
          
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 处理部署冲突的作业
  handle-deployment-conflict:
    needs: check-deployment-status
    if: needs.check-deployment-status.outputs.can_deploy == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: 部署冲突提示
        run: |
          echo "⚠️ 检测到正在进行中的部署任务"
          echo "请等待当前部署完成后再尝试，或手动取消正在进行的部署"
          exit 0  # 不标记为失败，但明确提示冲突

  # 过滤失效报警作业
  filter-failure-alert:
    runs-on: ubuntu-latest
    if: "github.event_name == 'push' && matches(github.event.head_commit.message, '^Upload\\s+file:.*$', 'i')"
    steps:
      - name: 过滤机制失效紧急报警
        run: |
          echo "❌ 严重错误：事件级过滤机制完全失效！"
          echo "提交信息: ${{ github.event.head_commit.message }}"
          echo "请立即检查工作流文件是否已正确提交到main分支"
          echo "检查提交信息中的关键字是否存在特殊字符或格式问题"
          exit 1  # 强制失败以引起注意
